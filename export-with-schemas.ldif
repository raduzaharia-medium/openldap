version: 1

# AutoFS schema
dn: cn=autofs,cn=schema,cn=config
objectClass: olcSchemaConfig
cn: autofs
olcAttributeTypes: {0}( 1.3.6.1.1.1.1.25 NAME 'automountInformation' DESC 'Inf
 ormation used by the autofs automounter' EQUALITY caseExactIA5Match SYNTAX 1.
 3.6.1.4.1.1466.115.121.1.26 SINGLE-VALUE )
olcObjectClasses: {0}( 1.3.6.1.1.1.1.13 NAME 'automount' DESC 'An entry in an 
 automounter map' SUP top STRUCTURAL MUST ( cn $ automountInformation $ object
 class ) MAY description )
olcObjectClasses: {1}( 1.3.6.1.4.1.2312.4.2.2 NAME 'automountMap' DESC 'An gro
 up of related automount objects' SUP top STRUCTURAL MUST ou )

# Sudoers schema
dn: cn=sudo,cn=schema,cn=config
objectClass: olcSchemaConfig
cn: sudo
olcAttributeTypes: {0}( 1.3.6.1.4.1.15953.9.1.1 NAME 'sudoUser' DESC 'User(s
 ) who may  run sudo' EQUALITY caseExactIA5Match SUBSTR caseExactIA5Substrin
 gsMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )
olcAttributeTypes: {1}( 1.3.6.1.4.1.15953.9.1.2 NAME 'sudoHost' DESC 'Host(s
 ) who may run sudo' EQUALITY caseExactIA5Match SUBSTR caseExactIA5Substring
 sMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.26 )
olcAttributeTypes: {2}( 1.3.6.1.4.1.15953.9.1.3 NAME 'sudoCommand' DESC 'Com
 mand(s) to be executed by sudo' EQUALITY caseExactIA5Match SYNTAX 1.3.6.1.4
 .1.1466.115.121.1.26 )
olcAttributeTypes: {3}( 1.3.6.1.4.1.15953.9.1.4 NAME 'sudoRunAs' DESC 'User(
 s) impersonated by sudo (deprecated)' EQUALITY caseExactIA5Match SYNTAX 1.3
 .6.1.4.1.1466.115.121.1.26 )
olcAttributeTypes: {4}( 1.3.6.1.4.1.15953.9.1.5 NAME 'sudoOption' DESC 'Opti
 ons(s) followed by sudo' EQUALITY caseExactIA5Match SYNTAX 1.3.6.1.4.1.1466
 .115.121.1.26 )
olcAttributeTypes: {5}( 1.3.6.1.4.1.15953.9.1.6 NAME 'sudoRunAsUser' DESC 'U
 ser(s) impersonated by sudo' EQUALITY caseExactIA5Match SYNTAX 1.3.6.1.4.1.
 1466.115.121.1.26 )
olcAttributeTypes: {6}( 1.3.6.1.4.1.15953.9.1.7 NAME 'sudoRunAsGroup' DESC '
 Group(s) impersonated by sudo' EQUALITY caseExactIA5Match SYNTAX 1.3.6.1.4.
 1.1466.115.121.1.26 )
olcAttributeTypes: {7}( 1.3.6.1.4.1.15953.9.1.8 NAME 'sudoNotBefore' DESC 'S
 tart of time interval for which the entry is valid' EQUALITY generalizedTim
 eMatch ORDERING generalizedTimeOrderingMatch SYNTAX 1.3.6.1.4.1.1466.115.12
 1.1.24 )
olcAttributeTypes: {8}( 1.3.6.1.4.1.15953.9.1.9 NAME 'sudoNotAfter' DESC 'En
 d of time interval for which the entry is valid' EQUALITY generalizedTimeMa
 tch ORDERING generalizedTimeOrderingMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1
 .24 )
olcAttributeTypes: {9}( 1.3.6.1.4.1.15953.9.1.10 NAME 'sudoOrder' DESC 'an i
 nteger to order the sudoRole entries' EQUALITY integerMatch ORDERING intege
 rOrderingMatch SYNTAX 1.3.6.1.4.1.1466.115.121.1.27 )
olcObjectClasses: {0}( 1.3.6.1.4.1.15953.9.2.1 NAME 'sudoRole' DESC 'Sudoer 
 Entries' SUP top STRUCTURAL MUST cn MAY ( sudoUser $ sudoHost $ sudoCommand
  $ sudoRunAs $ sudoRunAsUser $ sudoRunAsGroup $ sudoOption $ sudoOrder $ su
 doNotBefore $ sudoNotAfter $ description ) )

# Tree root and domain definition
dn: dc=home,dc=io
objectClass: dcObject
objectClass: organization
objectClass: top
dc: home
o: home

# User root definition
dn: ou=people,dc=home,dc=io
objectClass: organizationalUnit
objectClass: top
ou: people

# User Radu definition
dn: uid=radu,ou=people,dc=home,dc=io
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: posixAccount
objectClass: shadowAccount
objectClass: top
cn: Radu Zaharia
gidNumber: 10000
homeDirectory: /home/ldap/radu
sn: Radu
uid: radu
uidNumber: 10000
loginShell: /bin/bash
mail: email@something.com
userPassword:: ===========

# User Alexandra definition
dn: uid=alex,ou=people,dc=home,dc=io
objectClass: inetOrgPerson
objectClass: organizationalPerson
objectClass: person
objectClass: posixAccount
objectClass: shadowAccount
objectClass: top
cn: Alexandra Zaharia
gidNumber: 10000
homeDirectory: /home/ldap/alex
sn: Alexandra
uid: alex
uidNumber: 10001
loginShell: /bin/bash

# Sudoers root definition
dn: ou=sudoers,dc=home,dc=io
objectClass: organizationalUnit
objectClass: top
ou: sudoers

# Sudoer Radu definition
dn: cn=radu,ou=sudoers,dc=home,dc=io
objectClass: sudoRole
objectClass: top
cn: radu
sudoCommand: ALL
sudoHost: ALL
sudoOrder: 2
sudoRunAsUser: ALL
sudoUser: radu

# Default sudo rules
dn: cn=defaults,ou=sudoers,dc=home,dc=io
objectClass: sudoRole
objectClass: top
cn: defaults
sudoOption: env_reset
sudoOption: mail_badpass
sudoOption: secure_path=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/s
 bin:/bin:/snap/bin
sudoOrder: 1

# AutoFS root definition
dn: ou=automount,dc=home,dc=io
objectClass: organizationalUnit
objectClass: top
ou: automount

# AutoFS direct mount map root definition
dn: ou=auto.direct,ou=automount,dc=home,dc=io
objectClass: automountMap
objectClass: top
ou: auto.direct

# AutoFS master mount map root definition
dn: ou=auto.master,ou=automount,dc=home,dc=io
objectClass: automountMap
objectClass: top
ou: auto.master

# AutoFS master mount map definition
dn: cn=/-,ou=auto.master,ou=automount,dc=home,dc=io
objectClass: automount
objectClass: top
automountInformation: ldap:192.168.68.113:ou=auto.direct,ou=automount,dc=hom
 e,dc=io
cn: /-

# AutoFS media share mount definition
dn: cn=/mnt/network-storage/media,ou=auto.direct,ou=automount,dc=home,dc=io
objectClass: automount
objectClass: top
automountInformation: -fstype=cifs,rw,guest ://192.168.68.113/media
cn: /mnt/network-storage/media

# AutoFS shared mount definition
dn: cn=/mnt/network-storage/shared,ou=auto.direct,ou=automount,dc=home,dc=io
objectClass: automount
objectClass: top
automountInformation: -fstype=cifs,rw,guest ://192.168.68.113/shared
cn: /mnt/network-storage/shared

# AutoFS groups root definition
dn: ou=groups,dc=home,dc=io
objectClass: organizationalUnit
objectClass: top
ou: groups

# AutoFS ldap-users group definition
dn: cn=ldap-users,ou=groups,dc=home,dc=io
objectClass: posixGroup
objectClass: top
cn: ldap-users
gidNumber: 10000
memberUid: 10000
memberUid: 10001
